name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  get-apps:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.set-apps.outputs.apps }}
    steps:
      - uses: actions/checkout@v4
      - id: set-apps
        run: echo "apps=$(ls apps | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  build:
    needs: get-apps
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.get-apps.outputs.apps) }}
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    #  TURBO_REMOTE_ONLY: true
 
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
 
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
 
      - name: Install dependencies
        run: npm install

      - name: Turbo Prune
        run: |
          npx turbo prune --docker --scope=${{ matrix.app }}
          mv out ./${{ matrix.app }}-out

      - name: Build application
        run: |
          if [ "${{ matrix.app }}" == "backend" ]; then
            npm run build --workspace=apps/backend
          elif [ "${{ matrix.app }}" == "frontend" ]; then
            npm run build --workspace=apps/frontend
          fi

      - name: Prepare Docker context
        run: |
          if [ "${{ matrix.app }}" == "backend" ]; then
            cp -r apps/backend/dist ./${{ matrix.app }}-out/dist
          elif [ "${{ matrix.app }}" == "frontend" ]; then
            cp -r apps/frontend/.next ./${{ matrix.app }}-out/.next
          fi
 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.app }}-out
          file: ./apps/${{ matrix.app }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/dramisinfo/${{ matrix.app }}:${{ github.sha }}
            ghcr.io/dramisinfo/${{ matrix.app }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload pruned output
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-out
          path: ./${{ matrix.app }}-out